name: Update Api Docs

on:
  push:
    branches:
      - "main"

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write 
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  update-api-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "YARN_CACHE_FOLDER=$(yarn cache dir)" >> "$GITHUB_OUTPUT"
          echo "YARN_CACHE_FOLDER=$(yarn cache dir)"

      - name: Cache node modules
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: 
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn install

      - name: Build References
        run: yarn run build:docs

      - name: Commit api doc 
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs
          if ! git diff --quiet --cached; then
            git commit -m "Auto-update docs"
            git push
            echo "NEED_DEPLOYMENT=true" >> "$GITHUB_OUTPUT"
          fi
          echo "NEED_DEPLOYMENT=false" >> "$GITHUB_OUTPUT"
           

      - name: Setup Pages
        if: steps.check_changes.outputs.NEED_DEPLOYMENT == 'true'
        uses: actions/configure-pages@v3

      - name: Upload artifact
        if: steps.check_changes.outputs.NEED_DEPLOYMENT == 'true'
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: "./docs"

      - name: Deploy to GitHub Pages
        if: steps.check_changes.outputs.NEED_DEPLOYMENT == 'true'
        id: deployment
        uses: actions/deploy-pages@v2
